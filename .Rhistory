persp(volcano, expand=2.5)
persp(volcano, expand=0.25)
?
?
clc
hcl
help frames
help(frame)
help(plo)
help(plot)
clear
c
clc
clc
x <- c(1 , 2, 3, 4)
x
x = c(3, 4, 5)
x
?c
lenght(x)
length(x)
y=c(2, 3, 4)
x+y
ls
1s
1s()
ls()
rm(x,y)
character(0)
rm(lists-ls())
rm(list=ls())
matrix()
?matrix
x = matrix(data=c(1, 2, 3, 4), nrow=2, ncol=2)
x
x = matrix(data=c(1, 2, 3, 4), 2, 3)
x = matrix(data=c(1, 2, 3, 4), 2, 2)
x
x = matrix(data=c(1, 2, 3, 4), 2, 2, byrow=TRUE)
x
sqrt(x)
x^2
rnorm()
rnorm(10)
x = rnorm(10)
y = rnorm(10)
cor(x,y)
x=rnorm(50)
y = x+rnorm(50, mean=45, sd=0.1)
cor(x,y)
set.seed(23)
rnorm(50)
rnorm(50)
set.seed(3)
y=rnorm(100)
mean(y)
var(y)
sd(y)
sqrt(var(y))
plot(x,y)
x=rnorm(100)
y=rnorm(100)
plot(x,y)
plot(x,y, xlab="this is the x-axis", ylab="this is the y-axis", main = "plot of x vs y")
pdf("Figure.pdf")
plot(x,y,col="green")
dev.off()
null device
x=rnorm(100)
y=rnorm(100)
pdf("Figure.pdf")
plot(x,y,col="green")
dev.off()
?sqrt
seq(2,67)
x=seq(-pi,pi, length=60)
x
y=x
f=outer(x,y,function(x,y)cos(y)/(1+x^2))
contour(x,y,f)
contour(x,y,f,nlevels=45, add=T)
?contour
image(x,y,f)
image(x,y,f,nlevels=45)
image(x,y,f,nlevels=45)
contour(x,y,f,nlevels=45, add=T)
image(x,y,f)
image(x,y,fa)
fa=(f-t(f))/2
?t
contour(x,y,fa,nlevels=15)
contour(x,y,fa)
image(x,y,fa)
persp(x,y,fa)
persp(x,y,fa,theta=30,phi=20)
persp(x,y,fa,theta=30,phi=270)
persp(x,y,fa,theta=30,phi=70)
persp(x,y,fa,theta=15,phi=30)
A=matrix(seq(1,16),4,4)
A
A[2,3]
c(1,3)
c92,4
c(2,4)
A[c(1,3),c(2,4)]
A[1:3,2:4]
A[1:2,]
A[,1:2]
A[1,]
A[-1,-2]
dim(A)
install.packages("ISLR")
library("ISLR", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
Auto=read.table("Auto.data")
Auto=read.table("Auto.data")
persp(volcano)
persp(volcano, theta=30, phi=70)
persp(volcano, theta=10, phi=70)
persp(volcano, theta=50, phi=70)
Auto=read.table("Auto.data.txt")
Auto=read.table("Auto.data")
Auto=read.table("Auto.data")
Auto=read.table("Auto.data")
fix(Auto)
fix(Auto)
Auto=read.table("Auto.data",header=T, na.strings="?")
Auto = read.csv("Auto.csv",header=T,na.strings="?")
?change directory
?changedirectory
f<-file.choose()
getwd()
getwd()
load("~/Desktop/Data Challenge/BikeSharking.RData")
message("I am getting negative estimated counts, which is not correct.
I need to move on to other problems. I think I am getting negative
values because of missing data as well as my thinking of getting
counts using count = (arrivals - departures) is not sophisticated enough.
Also, information regarding number of Bikes available on 2013-09-26
at all stations will be helpful.")
print("I am getting negative estimated counts, which is not correct.
I need to move on to other problems. I think I am getting negative
values because of missing data as well as my thinking of getting
counts using count = (arrivals - departures) is not sophisticated enough.
Also, information regarding number of Bikes available on 2013-09-26
at all stations will be helpful.")
I need to move on to other problems. I think I am getting negative
cat("I am getting negative estimated counts, which is not correct.
\nI need to move on to other problems. I think I am getting negative
\nvalues because of missing data as well as my thinking of getting
\ncounts using count = (arrivals - departures) is not sophisticated enough.
\nAlso, information regarding number of Bikes available on 2013-09-26
\nat all stations will be helpful.")
"I need to move on to other problems. I think I am getting negative",
"Also, information regarding number of Bikes available on 2013-09-26"
"values because of missing data as well as my thinking of getting"
print(a)
a <- strwrap("I am getting negative estimated counts, which is not correct.
load("~/Desktop/Data Challenge/NYCBike.RData")
setwd("/Users/Ankoor/Desktop/Data Challenge")
tripMatrix <- data.matrix(dist)
tripHeatmap <- heatmap(tripMatrix, Rowv = NA, Colv = NA,
col = cm.colors(256), main = "NYC Citi Bike Route Popularity")
View(hood)
# ggplot2 library and RColorBrewer
library(ggplot2)
library(RColorBrewer)
ggplot(hood, aes (x = Hood)) + geom_bar(data = hood$start.freq, aes(y=start.freq, fill = value))
a <- as.numeric(hood$start.freq)
str(a)
ggplot(hood, aes (x = Hood)) +
geom_bar(data = as.numeric(hood$start.freq), aes(y=start.freq, fill = value))
?ggplot
pyramid.plot(hood$start.freq, hood$end.freq)
install.packages(plotrix)
install.packages("plotrix")
library(plotrix)
pyramid.plot(hood$start.freq, hood$end.freq)
pyramid.plot(hood$start.freq, hood$end.freq)
View(hood)
View(hood)
start <- c(hood$start.freq)
end <- c(hood$end.freq)
View(hood)
plotLab <- c(hood$Hood)
par(mar=pyramid.plot(start,end,labels=plotLab), main = "test", gap = 0.5))
par(mar=pyramid.plot(start,end,labels=plotLab, main = "test", gap = 0.5))
library(plotrix)
start <- c(hood$start.freq)
end <- c(hood$end.freq)
plotLab <- c(hood$Hood)
pdf( "NYC Bike Route Popularity Pyramid.pdf", width = 11, height = 8 )
pyramid.plot(start,end,labels=plotLab, main = "test", gap = 0.5)
dev.off()
barplot(start)
pdf( "NYC Bike Route Popularity Pyramid.pdf", width = 11, height = 8 )
pyramid.plot(start,end,labels=plotLab, top.labels = c("Starting Station", "Trips", "Ending Station"),
main = "test", gap = 0.5)
dev.off()
start <- c(hood$start.freq)
end <- c(hood$end.freq)
plotLab <- c(hood$Hood)
pdf( "NYC Bike Route Popularity Pyramid.pdf", width = 11, height = 8 )
pyramid.plot(start,end,labels=plotLab, top.labels = c("Starting Station", "Trips", "Ending Station"),
main = "NYC Citi Bike Route Popularity Pyramid", gap = 0.5)
dev.off()
start <- c(hood$start.freq)
end <- c(hood$end.freq)
plotLab <- c(hood$Hood)
pdf( "NYC Bike Route Popularity Pyramid.pdf", width = 11, height = 8 )
pyramid.plot(start,end,labels=plotLab, top.labels = c("Starting Station", "Trips", "Ending Station"),
main = "NYC Citi Bike Route Popularity Pyramid", gap = 0.5, show.values = TRUE)
dev.off()
load("~/Desktop/Data Challenge/BikeSharing.RData")
BikeWeekPattern <- data.frame(f.d.out, f.d.in, s.d.out, s.d.in)
names(BikeWeekPattern) <- c("fe2a5f.Dep", "fe2a5f.Arr", "fec8ff.Dep", "fec8ff.Arr")
View(BikeWeekPattern)
setwd("/Users/Ankoor/Documents/Git/R-Tricks")
temp <- read.csv("airportdata.csv", stringsAsFactors = TRUE)
temp <- temp[order(temp$Origin.Airport, temp$Destination.Airport),]
oriAirport <- temp[, 1]
desAirport <- temp[, 2]
flightTime <- temp[, 3]
Index <- which(desAirport == desAirport[1])
desAirportRange <- Index[2] - 1
oriAirportRange <- length(flightTime) / desAirportRange
distMatrix <- matrix(0, nrow = oriAirportRange, ncol = desAirportRange)
setwd("/Users/Ankoor/Documents/Git/R")
temp <- read.csv("airportdata.csv", stringsAsFactors = TRUE)
temp <- temp[order(temp$Origin.Airport, temp$Destination.Airport),]
oriAirport <- temp[, 1]
desAirport <- temp[, 2]
flightTime <- temp[, 3]
Index <- which(desAirport == desAirport[1])
desAirportRange <- Index[2] - 1
oriAirportRange <- length(flightTime) / desAirportRange
distMatrix <- matrix(0, nrow = oriAirportRange, ncol = desAirportRange)
for (i in 1:oriAirportRange){
for (j in 1:desAirportRange){
distMatrix[i, j] <- flightTime[(i - 1) * desAirportRange + j]
}
}
dist <- data.frame(distMatrix)
names(dist) <- c(levels(desAirport))
row.names(dist) <- c(levels(oriAirport))
View(dist)
View(dist)
